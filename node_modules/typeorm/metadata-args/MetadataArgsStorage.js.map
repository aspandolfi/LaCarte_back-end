{"version":3,"sources":["../../src/metadata-args/MetadataArgsStorage.ts"],"names":[],"mappings":"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","file":"MetadataArgsStorage.js","sourcesContent":["import {RelationMetadataArgs} from \"./RelationMetadataArgs\";\nimport {ColumnMetadataArgs} from \"./ColumnMetadataArgs\";\nimport {RelationCountMetadataArgs} from \"./RelationCountMetadataArgs\";\nimport {IndexMetadataArgs} from \"./IndexMetadataArgs\";\nimport {EntityListenerMetadataArgs} from \"./EntityListenerMetadataArgs\";\nimport {TableMetadataArgs} from \"./TableMetadataArgs\";\nimport {NamingStrategyMetadataArgs} from \"./NamingStrategyMetadataArgs\";\nimport {JoinTableMetadataArgs} from \"./JoinTableMetadataArgs\";\nimport {JoinColumnMetadataArgs} from \"./JoinColumnMetadataArgs\";\nimport {EmbeddedMetadataArgs} from \"./EmbeddedMetadataArgs\";\nimport {EntitySubscriberMetadataArgs} from \"./EntitySubscriberMetadataArgs\";\nimport {RelationIdMetadataArgs} from \"./RelationIdMetadataArgs\";\nimport {InheritanceMetadataArgs} from \"./InheritanceMetadataArgs\";\nimport {DiscriminatorValueMetadataArgs} from \"./DiscriminatorValueMetadataArgs\";\nimport {EntityRepositoryMetadataArgs} from \"./EntityRepositoryMetadataArgs\";\nimport {TransactionEntityMetadataArgs} from \"./TransactionEntityMetadataArgs\";\nimport {TransactionRepositoryMetadataArgs} from \"./TransactionRepositoryMetadataArgs\";\nimport {MetadataUtils} from \"../metadata-builder/MetadataUtils\";\nimport {GeneratedMetadataArgs} from \"./GeneratedMetadataArgs\";\n\n/**\n * Storage all metadatas args of all available types: tables, columns, subscribers, relations, etc.\n * Each metadata args represents some specifications of what it represents.\n * MetadataArgs used to create a real Metadata objects.\n */\nexport class MetadataArgsStorage {\n\n    // -------------------------------------------------------------------------\n    // Properties\n    // -------------------------------------------------------------------------\n\n    readonly tables: TableMetadataArgs[] = [];\n    readonly entityRepositories: EntityRepositoryMetadataArgs[] = [];\n    readonly transactionEntityManagers: TransactionEntityMetadataArgs[] = [];\n    readonly transactionRepositories: TransactionRepositoryMetadataArgs[] = [];\n    readonly namingStrategies: NamingStrategyMetadataArgs[] = [];\n    readonly entitySubscribers: EntitySubscriberMetadataArgs[] = [];\n    readonly indices: IndexMetadataArgs[] = [];\n    readonly columns: ColumnMetadataArgs[] = [];\n    readonly generations: GeneratedMetadataArgs[] = [];\n    readonly relations: RelationMetadataArgs[] = [];\n    readonly joinColumns: JoinColumnMetadataArgs[] = [];\n    readonly joinTables: JoinTableMetadataArgs[] = [];\n    readonly entityListeners: EntityListenerMetadataArgs[] = [];\n    readonly relationCounts: RelationCountMetadataArgs[] = [];\n    readonly relationIds: RelationIdMetadataArgs[] = [];\n    readonly embeddeds: EmbeddedMetadataArgs[] = [];\n    readonly inheritances: InheritanceMetadataArgs[] = [];\n    readonly discriminatorValues: DiscriminatorValueMetadataArgs[] = [];\n\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n\n    filterTables(target?: Function|string): TableMetadataArgs[];\n    filterTables(target?: (Function|string)[]): TableMetadataArgs[];\n    filterTables(target?: (Function|string)|(Function|string)[]): TableMetadataArgs[] {\n        return this.tables.filter(table => {\n            return target instanceof Array ? target.indexOf(table.target) !== -1 : table.target === target;\n        });\n    }\n\n    filterColumns(target: Function|string): ColumnMetadataArgs[];\n    filterColumns(target: (Function|string)[]): ColumnMetadataArgs[];\n    filterColumns(target: (Function|string)|(Function|string)[]): ColumnMetadataArgs[] {\n        return this.columns.filter(column => {\n            return target instanceof Array ? target.indexOf(column.target) !== -1 : column.target === target;\n        });\n    }\n\n    findGenerated(target: Function|string, propertyName: string): GeneratedMetadataArgs|undefined;\n    findGenerated(target: (Function|string)[], propertyName: string): GeneratedMetadataArgs|undefined;\n    findGenerated(target: (Function|string)|(Function|string)[], propertyName: string): GeneratedMetadataArgs|undefined {\n        return this.generations.find(generated => {\n            return (target instanceof Array ? target.indexOf(generated.target) !== -1 : generated.target === target) && generated.propertyName === propertyName;\n        });\n    }\n\n    filterRelations(target: Function|string): RelationMetadataArgs[];\n    filterRelations(target: (Function|string)[]): RelationMetadataArgs[];\n    filterRelations(target: (Function|string)|(Function|string)[]): RelationMetadataArgs[] {\n        return this.relations.filter(relation => {\n            return target instanceof Array ? target.indexOf(relation.target) !== -1 : relation.target === target;\n        });\n    }\n\n    filterRelationIds(target: Function|string): RelationIdMetadataArgs[];\n    filterRelationIds(target: (Function|string)[]): RelationIdMetadataArgs[];\n    filterRelationIds(target: (Function|string)|(Function|string)[]): RelationIdMetadataArgs[] {\n        return this.relationIds.filter(relationId => {\n            return target instanceof Array ? target.indexOf(relationId.target) !== -1 : relationId.target === target;\n        });\n    }\n\n    filterRelationCounts(target: Function|string): RelationCountMetadataArgs[];\n    filterRelationCounts(target: (Function|string)[]): RelationCountMetadataArgs[];\n    filterRelationCounts(target: (Function|string)|(Function|string)[]): RelationCountMetadataArgs[] {\n        return this.relationCounts.filter(relationCount => {\n            return target instanceof Array ? target.indexOf(relationCount.target) !== -1 : relationCount.target === target;\n        });\n    }\n\n    filterIndices(target: Function|string): IndexMetadataArgs[];\n    filterIndices(target: (Function|string)[]): IndexMetadataArgs[];\n    filterIndices(target: (Function|string)|(Function|string)[]): IndexMetadataArgs[] {\n        return this.indices.filter(index => {\n            return target instanceof Array ? target.indexOf(index.target) !== -1 : index.target === target;\n        });\n    }\n\n    filterListeners(target: Function|string): EntityListenerMetadataArgs[];\n    filterListeners(target: (Function|string)[]): EntityListenerMetadataArgs[];\n    filterListeners(target: (Function|string)|(Function|string)[]): EntityListenerMetadataArgs[] {\n        return this.entityListeners.filter(index => {\n            return target instanceof Array ? target.indexOf(index.target) !== -1 : index.target === target;\n        });\n    }\n\n    filterEmbeddeds(target: Function|string): EmbeddedMetadataArgs[];\n    filterEmbeddeds(target: (Function|string)[]): EmbeddedMetadataArgs[];\n    filterEmbeddeds(target: (Function|string)|(Function|string)[]): EmbeddedMetadataArgs[] {\n        return this.embeddeds.filter(embedded => {\n            return target instanceof Array ? target.indexOf(embedded.target) !== -1 : embedded.target === target;\n        });\n    }\n\n    findJoinTable(target: Function|string, propertyName: string): JoinTableMetadataArgs|undefined {\n        return this.joinTables.find(joinTable => {\n            return joinTable.target === target && joinTable.propertyName === propertyName;\n        });\n    }\n\n    filterJoinColumns(target: Function|string, propertyName: string): JoinColumnMetadataArgs[] {\n        return this.joinColumns.filter(joinColumn => {\n            return joinColumn.target === target && joinColumn.propertyName === propertyName;\n        });\n    }\n\n    filterSubscribers(target: Function|string): EntitySubscriberMetadataArgs[];\n    filterSubscribers(target: (Function|string)[]): EntitySubscriberMetadataArgs[];\n    filterSubscribers(target: (Function|string)|(Function|string)[]): EntitySubscriberMetadataArgs[] {\n        return this.entitySubscribers.filter(subscriber => {\n            return target instanceof Array ? target.indexOf(subscriber.target) !== -1 : subscriber.target === target;\n        });\n    }\n\n    filterNamingStrategies(target: Function|string): NamingStrategyMetadataArgs[];\n    filterNamingStrategies(target: (Function|string)[]): NamingStrategyMetadataArgs[];\n    filterNamingStrategies(target: (Function|string)|(Function|string)[]): NamingStrategyMetadataArgs[] {\n        return this.namingStrategies.filter(subscriber => {\n            return target instanceof Array ? target.indexOf(subscriber.target) !== -1 : subscriber.target === target;\n        });\n    }\n\n    filterTransactionEntityManagers(target: Function|string): TransactionEntityMetadataArgs[];\n    filterTransactionEntityManagers(target: (Function|string)[]): TransactionEntityMetadataArgs[];\n    filterTransactionEntityManagers(target: (Function|string)|(Function|string)[]): TransactionEntityMetadataArgs[] {\n        return this.transactionEntityManagers.filter(subscriber => {\n            return target instanceof Array ? target.indexOf(subscriber.target) !== -1 : subscriber.target === target;\n        });\n    }\n    \n    filterTransactionRepository(target: Function|string): TransactionRepositoryMetadataArgs[];\n    filterTransactionRepository(target: (Function|string)[]): TransactionRepositoryMetadataArgs[];\n    filterTransactionRepository(target: (Function|string)|(Function|string)[]): TransactionRepositoryMetadataArgs[] {\n        return this.transactionRepositories.filter(subscriber => {\n            return target instanceof Array ? target.indexOf(subscriber.target) !== -1 : subscriber.target === target;\n        });\n    }\n\n    filterSingleTableChildren(target: Function|string): TableMetadataArgs[] {\n        return this.tables.filter(table => {\n            return table.target instanceof Function\n                && target instanceof Function\n                && MetadataUtils.isInherited(table.target, target)\n                && table.type === \"single-table-child\";\n        });\n    }\n\n    findInheritanceType(target: Function|string): InheritanceMetadataArgs|undefined {\n        return this.inheritances.find(inheritance => inheritance.target === target);\n    }\n\n    findDiscriminatorValue(target: Function|string): DiscriminatorValueMetadataArgs|undefined {\n        return this.discriminatorValues.find(discriminatorValue => discriminatorValue.target === target);\n    }\n\n}"],"sourceRoot":".."}